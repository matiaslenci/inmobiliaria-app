<!DOCTYPE html>
<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>
      Calculadora de Tasas Inmobiliarias - Procesa Excel Profesionalmente
    </title>
    <meta
      name="description"
      content="Herramienta profesional para calcular tasas inmobiliarias desde archivos Excel. Procesamiento rápido, cálculos precisos y descarga de plantillas."
    />
    <meta
      name="keywords"
      content="tasas inmobiliarias, excel, calculadora, bienes raíces, procesamiento automático"
    />

    <!-- Font Awesome for Icons -->
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
    />
    <link rel="icon" href="/assets/calculator.svg" type="image/svg+xml" />
    <style>
      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }

      :root {
        /* Professional Color Palette */
        --primary: #4285f4;
        --primary-dark: #3367d6;
        --primary-light: #70a7ff;
        --success: #34a853;
        --success-light: #5fbf47;
        --danger: #ea4335;
        --warning: #fbbc04;

        /* Neutral Colors */
        --background: #fafbfc;
        --surface: #ffffff;
        --text-primary: #202124;
        --text-secondary: #5f6368;
        --text-muted: #9aa0a6;
        --border: #dadce0;
        --border-focus: #4285f4;

        /* Shadows */
        --shadow-sm: 0 1px 2px 0 rgba(60, 64, 67, 0.1);
        --shadow-md: 0 4px 6px -1px rgba(60, 64, 67, 0.1);
        --shadow-lg: 0 10px 15px -3px rgba(60, 64, 67, 0.1);
        --shadow-xl: 0 20px 25px -5px rgba(60, 64, 67, 0.1);

        /* Transitions */
        --transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        --transition-fast: all 0.15s ease-out;
      }

      body {
        font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
        background: linear-gradient(135deg, var(--background) 0%, #f1f3f4 100%);
        color: var(--text-primary);
        line-height: 1.6;
        min-height: 100vh;
      }

      /* Hero Section */
      .hero {
        background: linear-gradient(
          135deg,
          var(--primary) 0%,
          var(--primary-dark) 100%
        );
        color: white;
        padding: 4rem 2rem;
        text-align: center;
        position: relative;
        overflow: hidden;
      }

      .hero::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grid" width="10" height="10" patternUnits="userSpaceOnUse"><path d="M 10 0 L 0 0 0 10" fill="none" stroke="white" stroke-width="0.5" opacity="0.1"/></pattern></defs><rect width="100" height="100" fill="url(%23grid)"/></svg>');
        opacity: 0.1;
      }

      .hero-content {
        position: relative;
        max-width: 1200px;
        margin: 0 auto;
      }

      .hero-icon {
        background: rgba(255, 255, 255, 0.2);
        width: 80px;
        height: 80px;
        border-radius: 20px;
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 0 auto 2rem;
        backdrop-filter: blur(10px);
      }

      .hero h1 {
        font-size: 3.5rem;
        font-weight: 700;
        margin-bottom: 1rem;
        letter-spacing: -0.02em;
      }

      .hero p {
        font-size: 1.25rem;
        opacity: 0.9;
        max-width: 600px;
        margin: 0 auto;
      }

      /* Features Section */
      .features {
        padding: 4rem 2rem;
        max-width: 1200px;
        margin: 0 auto;
      }

      .features-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 2rem;
        margin-bottom: 4rem;
      }

      .feature-card {
        background: var(--surface);
        padding: 2rem;
        border-radius: 16px;
        box-shadow: var(--shadow-md);
        text-align: center;
        transition: var(--transition);
        border: 1px solid var(--border);
      }

      .feature-card:hover {
        transform: translateY(-4px);
        box-shadow: var(--shadow-xl);
      }

      .feature-icon {
        background: linear-gradient(
          135deg,
          var(--primary-light),
          var(--primary)
        );
        color: white;
        width: 60px;
        height: 60px;
        border-radius: 12px;
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 0 auto 1rem;
      }

      .feature-card h3 {
        font-size: 1.25rem;
        font-weight: 600;
        margin-bottom: 0.5rem;
        color: var(--text-primary);
      }

      .feature-card p {
        color: var(--text-secondary);
        font-size: 0.9rem;
      }

      /* Upload Section */
      .upload-section {
        max-width: 600px;
        margin: 0 auto;
        padding: 0 2rem;
      }

      .upload-card {
        background: var(--surface);
        border-radius: 20px;
        padding: 3rem;
        box-shadow: var(--shadow-xl);
        border: 1px solid var(--border);
      }

      .upload-card h2 {
        text-align: center;
        font-size: 2rem;
        font-weight: 700;
        margin-bottom: 0.5rem;
        background: linear-gradient(
          135deg,
          var(--primary),
          var(--primary-dark)
        );
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
      }

      .upload-subtitle {
        text-align: center;
        color: var(--text-secondary);
        margin-bottom: 2rem;
      }

      /* File Upload Area */
      .file-upload {
        border: 2px dashed var(--border);
        border-radius: 12px;
        padding: 3rem 2rem;
        text-align: center;
        transition: var(--transition);
        cursor: pointer;
        position: relative;
        margin-bottom: 2rem;
      }

      .file-upload:hover {
        border-color: var(--primary);
        background: rgba(66, 133, 244, 0.02);
      }

      .file-upload.drag-over {
        border-color: var(--primary);
        background: rgba(66, 133, 244, 0.05);
        transform: scale(1.02);
      }

      .file-upload input[type="file"] {
        position: absolute;
        opacity: 0;
        width: 100%;
        height: 100%;
        cursor: pointer;
      }

      .upload-icon {
        background: rgba(66, 133, 244, 0.1);
        color: var(--primary);
        width: 60px;
        height: 60px;
        border-radius: 12px;
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 0 auto 1rem;
        transition: var(--transition);
      }

      .file-upload:hover .upload-icon {
        background: rgba(66, 133, 244, 0.15);
      }

      .upload-text {
        font-weight: 600;
        color: var(--text-primary);
        margin-bottom: 0.5rem;
      }

      .upload-subtext {
        color: var(--text-secondary);
        font-size: 0.9rem;
        margin-bottom: 1rem;
      }

      .file-info {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.5rem;
        color: var(--text-muted);
        font-size: 0.8rem;
      }

      /* Selected File Display */
      .selected-file {
        background: rgba(52, 168, 83, 0.1);
        border: 2px solid var(--success);
        border-radius: 12px;
        padding: 1.5rem;
        text-align: center;
        margin-bottom: 2rem;
      }

      .selected-file .upload-icon {
        background: rgba(52, 168, 83, 0.1);
        color: var(--success);
      }

      /* Buttons */
      .btn {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        gap: 0.5rem;
        padding: 0.75rem 2rem;
        border: none;
        border-radius: 8px;
        font-weight: 600;
        font-size: 0.95rem;
        cursor: pointer;
        transition: var(--transition);
        text-decoration: none;
        width: 100%;
        margin-bottom: 1rem;
      }

      .btn:last-child {
        margin-bottom: 0;
      }

      .btn-primary {
        background: linear-gradient(
          135deg,
          var(--primary),
          var(--primary-dark)
        );
        color: white;
        box-shadow: var(--shadow-md);
      }

      .btn-primary:hover:not(:disabled) {
        transform: translateY(-2px);
        box-shadow: var(--shadow-lg);
      }

      .btn-primary:disabled {
        opacity: 0.6;
        cursor: not-allowed;
      }

      .btn-success {
        background: var(--surface);
        color: var(--success);
        border: 2px solid var(--success);
      }

      .btn-success:hover {
        background: var(--success);
        color: white;
        transform: translateY(-2px);
      }

      /* Alert */
      .alert {
        padding: 1rem;
        border-radius: 8px;
        margin-bottom: 1rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
      }

      .alert-danger {
        background: rgba(234, 67, 53, 0.1);
        color: var(--danger);
        border: 1px solid rgba(234, 67, 53, 0.2);
      }

      .alert-success {
        background: rgba(52, 168, 83, 0.1);
        color: var(--success);
        border: 1px solid rgba(52, 168, 83, 0.2);
      }

      /* Footer */
      .footer {
        background: var(--surface);
        border-top: 1px solid var(--border);
        padding: 2rem;
        text-align: center;
        color: var(--text-secondary);
        margin-top: 4rem;
      }

      /* Responsive */
      @media (max-width: 768px) {
        .hero h1 {
          font-size: 2.5rem;
        }

        .hero p {
          font-size: 1.1rem;
        }

        .upload-card {
          padding: 2rem;
        }

        .file-upload {
          padding: 2rem 1rem;
        }

        .features {
          padding: 2rem 1rem;
        }
      }

      /* Animations */
      @keyframes fadeInUp {
        from {
          opacity: 0;
          transform: translateY(30px);
        }
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }

      .animate-fade-in-up {
        animation: fadeInUp 0.6s ease-out;
      }

      /* Loading State */
      .loading {
        display: inline-block;
        width: 20px;
        height: 20px;
        border: 2px solid transparent;
        border-top: 2px solid currentColor;
        border-radius: 50%;
        animation: spin 1s linear infinite;
      }

      @keyframes spin {
        to {
          transform: rotate(360deg);
        }
      }

      /* Navigation */
      .navbar {
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(10px);
        border-bottom: 1px solid var(--border);
        padding: 1rem 2rem;
        position: sticky;
        top: 0;
        z-index: 100;
      }

      .navbar-content {
        display: flex;
        justify-content: space-between;
        align-items: center;
        max-width: 1200px;
        margin: 0 auto;
      }

      .navbar-brand {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        text-decoration: none;
        color: var(--text-primary);
        font-weight: 700;
        font-size: 1.25rem;
      }

      .navbar-brand i {
        color: var(--primary);
      }

      .navbar-actions {
        display: flex;
        align-items: center;
        gap: 0.75rem;
      }

      .btn-nav {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.5rem 1rem;
        border: none;
        border-radius: 6px;
        font-weight: 500;
        font-size: 0.9rem;
        cursor: pointer;
        transition: var(--transition);
        text-decoration: none;
        white-space: nowrap;
      }

      .btn-nav-ghost {
        background: transparent;
        color: var(--text-secondary);
        border: 1px solid transparent;
      }

      .btn-nav-ghost:hover {
        background: rgba(66, 133, 244, 0.05);
        color: var(--primary);
        border-color: rgba(66, 133, 244, 0.1);
      }

      .btn-nav-primary {
        background: linear-gradient(
          135deg,
          var(--primary),
          var(--primary-dark)
        );
        color: white;
        border: 1px solid var(--primary);
        box-shadow: var(--shadow-sm);
      }

      .btn-nav-primary:hover {
        transform: translateY(-1px);
        box-shadow: var(--shadow-md);
      }

      @media (max-width: 768px) {
        .navbar {
          padding: 1rem;
        }

        .navbar-brand {
          font-size: 1.1rem;
        }

        .navbar-title {
          display: none;
        }

        .btn-nav {
          padding: 0.4rem 0.8rem;
          font-size: 0.85rem;
        }

        .navbar-actions {
          gap: 0.5rem;
        }
      }
    </style>
  </head>
  <body>
    <!-- Navigation -->
    <!-- Navigation -->
    <nav class="navbar">
      <div class="navbar-content">
        <a href="/" class="navbar-brand">
          <i class="fas fa-calculator"></i>
          <p class="navbar-title">Tasas Inmobiliarias</p>
        </a>
        <div class="navbar-actions">
          <% if (user) { %>
          <span class="user-email"><%= user.email %></span>
          <form action="/logout" method="POST" style="display: inline">
            <button type="submit" class="btn-nav btn-nav-primary">
              <i class="fas fa-sign-out-alt"></i>
              Cerrar Sesión
            </button>
          </form>
          <% } else { %>
          <a href="/login" class="btn-nav btn-nav-ghost">
            <i class="fas fa-sign-in-alt"></i> Iniciar Sesión
          </a>
          <a href="/register" class="btn-nav btn-nav-primary">
            <i class="fas fa-user-plus"></i> Registrarse
          </a>
          <% } %>
        </div>
      </div>
    </nav>

    <!-- Hero Section -->
    <section class="hero">
      <div class="hero-content animate-fade-in-up">
        <div class="hero-icon">
          <i class="fas fa-calculator fa-2x"></i>
        </div>
        <h1>Calculadora de Tasas Inmobiliarias</h1>
        <p>
          Procesa tus archivos Excel de manera rápida y profesional para obtener
          cálculos precisos de tasas inmobiliarias
        </p>
      </div>
    </section>

    <!-- Features Section -->
    <section class="features">
      <div class="features-grid">
        <div class="feature-card animate-fade-in-up">
          <div class="feature-icon">
            <i class="fas fa-file-excel fa-lg"></i>
          </div>
          <h3>Compatibilidad Excel</h3>
          <!-- <p>Soporta archivos .xlsx y .xls con procesamiento automático</p> -->
          <p>Soporta archivos .xlsx con procesamiento automático</p>
        </div>

        <div class="feature-card animate-fade-in-up">
          <div class="feature-icon">
            <i class="fas fa-chart-line fa-lg"></i>
          </div>
          <h3>Cálculos Precisos</h3>
          <p>Algoritmos avanzados para tasas inmobiliarias exactas</p>
        </div>

        <div class="feature-card animate-fade-in-up">
          <div class="feature-icon">
            <i class="fas fa-shield-alt fa-lg"></i>
          </div>
          <h3>Seguro y Confiable</h3>
          <p>Tus datos están protegidos con la máxima seguridad</p>
        </div>
      </div>

      <!-- Upload Section -->
      <div class="upload-section">
        <div class="upload-card animate-fade-in-up">
          <h2>Subir Archivo Excel</h2>
          <p class="upload-subtitle">
            Selecciona tu archivo para comenzar el procesamiento
          </p>

          <form
            action="/upload"
            method="POST"
            enctype="multipart/form-data"
            id="uploadForm"
          >
            <!-- File Upload Area -->
            <div class="file-upload" id="fileUpload">
              <input
                type="file"
                name="archivoExcel"
                id="archivoExcel"
                accept=".xlsx,.xls"
                required
                style="display: none"
              />
              <div class="upload-content">
                <div class="upload-icon">
                  <i class="fas fa-cloud-upload-alt fa-lg"></i>
                </div>
                <div class="upload-text">Arrastra tu archivo Excel aquí</div>
                <div class="upload-subtext">o haz clic para seleccionar</div>
                <div class="file-info">
                  <i class="fas fa-file-excel"></i>
                  <span>Formatos soportados: .xlsx</span>
                  <!--                   <span>Formatos soportados: .xlsx, .xls</span> -->
                </div>
              </div>
            </div>

            <!-- Selected File Display (hidden by default) -->
            <div class="selected-file" id="selectedFile" style="display: none">
              <div class="upload-icon">
                <i class="fas fa-check-circle fa-lg"></i>
              </div>
              <div class="upload-text" id="fileName"></div>
              <div class="upload-subtext" id="fileSize"></div>
            </div>

            <!-- Error Alert -->
            <% if (typeof error !== 'undefined' && error) { %>
            <div class="alert alert-danger">
              <i class="fas fa-exclamation-circle"></i>
              <%= error %>
            </div>
            <% } %>

            <!-- Success Alert -->
            <div
              class="alert alert-success"
              id="successAlert"
              style="display: none"
            >
              <i class="fas fa-check-circle"></i>
              <span id="successMessage"></span>
            </div>

            <!-- Action Buttons -->
            <button
              type="submit"
              class="btn btn-primary"
              id="processBtn"
              disabled
            >
              <i class="fas fa-calculator"></i>
              <span id="btnText">Calcular Tasas</span>
              <div class="loading" id="btnLoading" style="display: none"></div>
            </button>

            <a href="/plantilla" class="btn btn-success">
              <i class="fas fa-download"></i>
              Descargar Plantilla Excel
            </a>
          </form>
        </div>
      </div>
    </section>

    <!-- Footer -->
    <footer class="footer">
      <p>&copy; 2025 Calculadora de Tasas Inmobiliarias</p>
    </footer>

    <script>
      // File upload functionality
      const fileUpload = document.getElementById("fileUpload");
      const fileInput = document.getElementById("archivoExcel");
      const selectedFile = document.getElementById("selectedFile");
      const fileName = document.getElementById("fileName");
      const fileSize = document.getElementById("fileSize");
      const processBtn = document.getElementById("processBtn");
      const uploadForm = document.getElementById("uploadForm");
      const successAlert = document.getElementById("successAlert");
      const successMessage = document.getElementById("successMessage");
      const btnText = document.getElementById("btnText");
      const btnLoading = document.getElementById("btnLoading");

      // Drag and drop functionality
      fileUpload.addEventListener("dragover", (e) => {
        e.preventDefault();
        fileUpload.classList.add("drag-over");
      });

      fileUpload.addEventListener("dragleave", (e) => {
        e.preventDefault();
        fileUpload.classList.remove("drag-over");
      });

      fileUpload.addEventListener("drop", (e) => {
        e.preventDefault();
        fileUpload.classList.remove("drag-over");

        const files = e.dataTransfer.files;
        if (files.length > 0) {
          fileInput.files = files;
          handleFileSelect(files[0]);
        }
      });

      // File input change
      fileInput.addEventListener("change", (e) => {
        if (e.target.files.length > 0) {
          handleFileSelect(e.target.files[0]);
        }
      });

      // Handle file selection
      function handleFileSelect(file) {
        // Validate file type
        const validTypes = [
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel",
        ];
        const validExtensions = [".xlsx", ".xls"];

        const isValidType =
          validTypes.includes(file.type) ||
          validExtensions.some((ext) => file.name.toLowerCase().endsWith(ext));

        if (!isValidType) {
          showAlert(
            "Por favor selecciona un archivo Excel válido (.xlsx o .xls)",
            "error"
          );
          return;
        }

        // Display selected file
        fileName.textContent = file.name;
        fileSize.textContent = `${(file.size / 1024 / 1024).toFixed(2)} MB`;

        fileUpload.style.display = "none";
        selectedFile.style.display = "block";
        processBtn.disabled = false;

        showAlert(
          `Archivo "${file.name}" seleccionado correctamente`,
          "success"
        );
      }

      // Form submission
      uploadForm.addEventListener("submit", (e) => {
        btnText.textContent = "Procesando...";
        btnLoading.style.display = "inline-block";
        processBtn.disabled = true;
      });

      fileInput.addEventListener("click", () => {
        fileInput.value = ""; // 👈 Se limpia antes de seleccionar
      });

      // Show alert function
      function showAlert(message, type) {
        successMessage.textContent = message;
        successAlert.className = `alert alert-${
          type === "error" ? "danger" : "success"
        }`;
        successAlert.style.display = "flex";

        // Hide after 5 seconds
        setTimeout(() => {
          successAlert.style.display = "none";
        }, 5000);
      }

      // Click to select file
      fileUpload.addEventListener("click", () => {
        fileInput.click();
      });

      // Reset file selection
      function resetFileSelection() {
        fileUpload.style.display = "block";
        selectedFile.style.display = "none";
        processBtn.disabled = true;
        fileInput.value = "";
      }

      // Add click handler to selected file to allow changing
      selectedFile.addEventListener("click", resetFileSelection);

      // Animate elements on scroll
      const observerOptions = {
        threshold: 0.1,
        rootMargin: "0px 0px -50px 0px",
      };

      const observer = new IntersectionObserver((entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            entry.target.classList.add("animate-fade-in-up");
          }
        });
      }, observerOptions);

      // Observe elements
      document.querySelectorAll(".feature-card, .upload-card").forEach((el) => {
        observer.observe(el);
      });
    </script>
  </body>
</html>
