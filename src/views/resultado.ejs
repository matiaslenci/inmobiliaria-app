<!DOCTYPE html>
<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Resultado de Consulta - Tasas Inmobiliarias</title>
    <meta
      name="description"
      content="Resultados del procesamiento de tasas inmobiliarias - CÃ¡lculos profesionales de agua y tasas municipales"
    />

    <!-- Font Awesome for Icons -->
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
    />

    <style>
      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }

      :root {
        /* Professional Color Palette */
        --primary: #4285f4;
        --primary-dark: #3367d6;
        --primary-light: #70a7ff;
        --success: #34a853;
        --success-light: #5fbf47;
        --danger: #ea4335;
        --warning: #fbbc04;

        /* Neutral Colors */
        --background: #fafbfc;
        --surface: #ffffff;
        --surface-secondary: #f8f9fa;
        --text-primary: #202124;
        --text-secondary: #5f6368;
        --text-muted: #9aa0a6;
        --border: #dadce0;
        --border-light: #e8eaed;
        --border-focus: #4285f4;

        /* Shadows */
        --shadow-sm: 0 1px 2px 0 rgba(60, 64, 67, 0.1);
        --shadow-md: 0 4px 6px -1px rgba(60, 64, 67, 0.1);
        --shadow-lg: 0 10px 15px -3px rgba(60, 64, 67, 0.1);
        --shadow-xl: 0 20px 25px -5px rgba(60, 64, 67, 0.1);

        /* Transitions */
        --transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
      }

      body {
        font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
        background: linear-gradient(135deg, var(--background) 0%, #f1f3f4 100%);
        color: var(--text-primary);
        line-height: 1.6;
        min-height: 100vh;
      }

      /* Header */
      .header {
        background: linear-gradient(
          135deg,
          var(--primary) 0%,
          var(--primary-dark) 100%
        );
        color: white;
        padding: 2rem 0;
        box-shadow: var(--shadow-lg);
      }

      .header-content {
        max-width: 1200px;
        margin: 0 auto;
        padding: 0 2rem;
        display: flex;
        align-items: center;
        gap: 1rem;
      }

      .header-icon {
        background: rgba(255, 255, 255, 0.2);
        width: 60px;
        height: 60px;
        border-radius: 12px;
        display: flex;
        align-items: center;
        justify-content: center;
        backdrop-filter: blur(10px);
      }

      .header h1 {
        font-size: 2rem;
        font-weight: 700;
        margin: 0;
      }

      .header p {
        opacity: 0.9;
        margin: 0;
        font-size: 1rem;
      }

      /* Main Content */
      .main-content {
        max-width: 1400px;
        margin: 0 auto;
        padding: 3rem 2rem;
      }

      /* Statistics Cards */
      .stats-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 1.5rem;
        margin-bottom: 3rem;
      }

      .stat-card {
        background: var(--surface);
        padding: 1.5rem;
        border-radius: 12px;
        box-shadow: var(--shadow-md);
        border: 1px solid var(--border-light);
        transition: var(--transition);
      }

      .stat-card:hover {
        transform: translateY(-2px);
        box-shadow: var(--shadow-lg);
      }

      .stat-header {
        display: flex;
        align-items: center;
        gap: 0.75rem;
        margin-bottom: 0.5rem;
      }

      .stat-icon {
        width: 40px;
        height: 40px;
        border-radius: 8px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.1rem;
      }

      .stat-icon.water {
        background: rgba(52, 168, 83, 0.1);
        color: var(--success);
      }

      .stat-icon.tax {
        background: rgba(66, 133, 244, 0.1);
        color: var(--primary);
      }

      .stat-icon.total {
        background: rgba(251, 188, 4, 0.1);
        color: var(--warning);
      }

      .stat-title {
        font-weight: 600;
        color: var(--text-secondary);
        font-size: 0.9rem;
      }

      .stat-value {
        font-size: 2rem;
        font-weight: 700;
        color: var(--text-primary);
      }

      /* Table Container */
      .table-container {
        background: var(--surface);
        border-radius: 16px;
        overflow: hidden;
        box-shadow: var(--shadow-lg);
        border: 1px solid var(--border-light);
        margin-bottom: 2rem;
      }

      .table-header {
        padding: 1.5rem 2rem;
        background: linear-gradient(
          135deg,
          var(--surface-secondary),
          var(--surface)
        );
        border-bottom: 2px solid var(--border-light);
      }

      .table-header h2 {
        font-size: 1.5rem;
        font-weight: 700;
        color: var(--text-primary);
        margin: 0;
        display: flex;
        align-items: center;
        gap: 0.75rem;
      }

      /* Responsive Table */
      .table-wrapper {
        overflow-x: auto;
      }

      .results-table {
        width: 100%;
        border-collapse: collapse;
        font-size: 0.9rem;
      }

      .results-table th {
        background: linear-gradient(
          135deg,
          var(--primary-light),
          var(--primary)
        );
        color: white;
        padding: 1rem 0.75rem;
        text-align: left;
        font-weight: 600;
        font-size: 0.85rem;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        border: none;
        white-space: nowrap;
      }

      .results-table th:first-child {
        border-radius: 0;
      }

      .results-table th:last-child {
        border-radius: 0;
      }

      .results-table td {
        padding: 1rem 0.75rem;
        border-bottom: 1px solid var(--border-light);
        color: var(--text-primary);
        transition: var(--transition);
      }

      .results-table tr:hover td {
        background: rgba(66, 133, 244, 0.02);
      }

      .results-table tr:last-child td {
        border-bottom: none;
      }

      /* Data Formatting */
      .currency {
        font-weight: 600;
        color: var(--success);
      }

      .account-number {
        font-family: "Courier New", monospace;
        background: var(--surface-secondary);
        padding: 0.25rem 0.5rem;
        border-radius: 4px;
        font-size: 0.85rem;
      }

      .empty-cell {
        color: var(--text-muted);
        font-style: italic;
      }

      /* Action Buttons */
      .actions {
        display: flex;
        gap: 1rem;
        justify-content: center;
        flex-wrap: wrap;
        margin-top: 2rem;
      }

      .btn {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.75rem 2rem;
        border: none;
        border-radius: 8px;
        font-weight: 600;
        font-size: 0.95rem;
        cursor: pointer;
        transition: var(--transition);
        text-decoration: none;
        min-width: 160px;
        justify-content: center;
      }

      .btn-primary {
        background: linear-gradient(
          135deg,
          var(--primary),
          var(--primary-dark)
        );
        color: white;
        box-shadow: var(--shadow-md);
      }

      .btn-primary:hover {
        transform: translateY(-2px);
        box-shadow: var(--shadow-lg);
        color: white;
        text-decoration: none;
      }

      .btn-success {
        background: linear-gradient(
          135deg,
          var(--success),
          var(--success-light)
        );
        color: white;
        box-shadow: var(--shadow-md);
      }

      .btn-success:hover {
        transform: translateY(-2px);
        box-shadow: var(--shadow-lg);
        color: white;
        text-decoration: none;
      }

      .btn-outline {
        background: var(--surface);
        color: var(--primary);
        border: 2px solid var(--primary);
      }

      .btn-outline:hover {
        background: var(--primary);
        color: white;
        transform: translateY(-2px);
        text-decoration: none;
      }

      /* Empty State */
      .empty-state {
        text-align: center;
        padding: 4rem 2rem;
        color: var(--text-muted);
      }

      .empty-state i {
        font-size: 4rem;
        margin-bottom: 1rem;
        opacity: 0.5;
      }

      /* Responsive Design */
      @media (max-width: 768px) {
        .header-content {
          padding: 0 1rem;
        }

        .header h1 {
          font-size: 1.5rem;
        }

        .main-content {
          padding: 2rem 1rem;
        }

        .stats-grid {
          grid-template-columns: 1fr;
          gap: 1rem;
        }

        .table-header {
          padding: 1rem;
        }

        .table-header h2 {
          font-size: 1.25rem;
        }

        .results-table th,
        .results-table td {
          padding: 0.75rem 0.5rem;
          font-size: 0.8rem;
        }

        .actions {
          flex-direction: column;
          align-items: center;
        }

        .btn {
          width: 100%;
          max-width: 300px;
        }
      }

      /* Print Styles */
      @media print {
        body {
          background: white;
        }

        .header {
          background: var(--primary) !important;
        }

        .actions {
          display: none;
        }

        .table-container {
          box-shadow: none;
          border: 1px solid var(--border);
        }
      }

      /* Animations */
      @keyframes fadeInUp {
        from {
          opacity: 0;
          transform: translateY(30px);
        }
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }

      .animate-fade-in-up {
        animation: fadeInUp 0.6s ease-out;
      }

      /* Loading Animation */
      .loading {
        display: inline-block;
        width: 20px;
        height: 20px;
        border: 2px solid transparent;
        border-top: 2px solid currentColor;
        border-radius: 50%;
        animation: spin 1s linear infinite;
      }

      @keyframes spin {
        to {
          transform: rotate(360deg);
        }
      }
    </style>
  </head>
  <body>
    <!-- Header -->
    <header class="header">
      <div class="header-content">
        <div class="header-icon">
          <i class="fas fa-chart-bar fa-lg"></i>
        </div>
        <div>
          <h1>Resultado de Consulta</h1>
          <p>Tasas Inmobiliarias Procesadas</p>
        </div>
      </div>
    </header>

    <!-- Main Content -->
    <main class="main-content">
      <!-- Statistics Cards -->
      <div class="stats-grid animate-fade-in-up">
        <div class="stat-card">
          <div class="stat-header">
            <div class="stat-icon total">
              <i class="fas fa-list-alt"></i>
            </div>
            <div class="stat-title">Total de Registros</div>
          </div>
          <div class="stat-value"><%= totalRecords %></div>
        </div>

        <div class="stat-card">
          <div class="stat-header">
            <div class="stat-icon water">
              <i class="fas fa-tint"></i>
            </div>
            <div class="stat-title">Cuentas de Agua</div>
          </div>
          <div class="stat-value"><%= waterAccounts %></div>
        </div>

        <div class="stat-card">
          <div class="stat-header">
            <div class="stat-icon tax">
              <i class="fas fa-calculator"></i>
            </div>
            <div class="stat-title">Cuentas de Tasas</div>
          </div>
          <div class="stat-value"><%= taxAccounts %></div>
        </div>
      </div>

      <!-- Results Table -->
      <div class="table-container animate-fade-in-up">
        <div class="table-header">
          <h2>
            <i class="fas fa-table"></i>
            Detalle de Tasas Inmobiliarias
          </h2>
        </div>

        <% if (totalRecords > 0) { %>
        <div class="table-wrapper">
          <table class="results-table">
            <thead>
              <tr>
                <th><i class="fas fa-home"></i> DirecciÃ³n Inmueble</th>
                <th><i class="fas fa-tint"></i> Cuenta Agua</th>
                <th><i class="fas fa-dollar-sign"></i> Monto Agua</th>
                <th><i class="fas fa-calculator"></i> Cuenta Tasa</th>
                <th><i class="fas fa-dollar-sign"></i> Monto Tasas</th>
                <th><i class="fas fa-chart-line"></i> Aumento</th>
                <th><i class="fas fa-coins"></i> Valor Inicial</th>
                <th><i class="fas fa-calendar-alt"></i> Inicio</th>
                <th><i class="fas fa-calendar-check"></i> FinalizaciÃ³n</th>
              </tr>
            </thead>
            <tbody>
              <% for(let i = 0; i < totalRecords; i++) { %>
              <tr>
                <td class="empty-cell">-</td>
                <td>
                  <% if (typeof cuentasAgua !== 'undefined' && cuentasAgua[i] &&
                  cuentasAgua[i] !== '-') { %>
                  <span class="account-number"><%= cuentasAgua[i] %></span>
                  <% } else { %>
                  <span class="empty-cell">-</span>
                  <% } %>
                </td>
                <td>
                  <% if (typeof montosAgua !== 'undefined' && montosAgua[i] &&
                  montosAgua[i] !== '-') { %>
                  <span class="currency"><%= montosAgua[i] %></span>
                  <% } else { %>
                  <span class="empty-cell">-</span>
                  <% } %>
                </td>
                <td>
                  <% if (typeof cuentasTasas !== 'undefined' && cuentasTasas[i]
                  && cuentasTasas[i] !== '-') { %>
                  <span class="account-number"><%= cuentasTasas[i] %></span>
                  <% } else { %>
                  <span class="empty-cell">-</span>
                  <% } %>
                </td>
                <td>
                  <% if (typeof montosTasas !== 'undefined' && montosTasas[i] &&
                  montosTasas[i] !== '-') { %>
                  <span class="currency"><%= montosTasas[i] %></span>
                  <% } else { %>
                  <span class="empty-cell">-</span>
                  <% } %>
                </td>
                <td class="empty-cell">-</td>
                <td class="empty-cell">-</td>
                <td class="empty-cell">-</td>
                <td class="empty-cell">-</td>
              </tr>
              <% } %>
            </tbody>
          </table>
        </div>
        <% } else { %>
        <div class="empty-state">
          <i class="fas fa-inbox"></i>
          <h3>No hay datos para mostrar</h3>
          <p>No se encontraron registros en el archivo procesado.</p>
        </div>
        <% } %>
      </div>

      <!-- Action Buttons -->
      <div class="actions animate-fade-in-up">
        <a href="/" class="btn btn-primary">
          <i class="fas fa-arrow-left"></i>
          Volver al Inicio
        </a>

        <button onclick="window.print()" class="btn btn-outline">
          <i class="fas fa-print"></i>
          Imprimir Resultados
        </button>

        <a href="/export" class="btn btn-success">
          <i class="fas fa-download"></i>
          Exportar Excel
        </a>
      </div>
    </main>

    <script>
      // Animate elements on load
      document.addEventListener("DOMContentLoaded", function () {
        const animatedElements = document.querySelectorAll(
          ".animate-fade-in-up"
        );

        const observer = new IntersectionObserver(
          (entries) => {
            entries.forEach((entry) => {
              if (entry.isIntersecting) {
                entry.target.style.animationDelay = `${
                  Array.from(animatedElements).indexOf(entry.target) * 0.1
                }s`;
                entry.target.classList.add("animate-fade-in-up");
              }
            });
          },
          {
            threshold: 0.1,
          }
        );

        animatedElements.forEach((el) => observer.observe(el));
      });

      // Format currency values
      document.addEventListener("DOMContentLoaded", function () {
        const currencyElements = document.querySelectorAll(".currency");
        currencyElements.forEach((el) => {
          const value = el.textContent.replace("$", "");
          if (!isNaN(value) && value !== "") {
            const formatted = parseFloat(value).toLocaleString("es-AR", {
              style: "currency",
              currency: "ARS",
              minimumFractionDigits: 2,
            });
            el.textContent = formatted;
          }
        });
      });

      // Add row hover effects
      document.addEventListener("DOMContentLoaded", function () {
        const tableRows = document.querySelectorAll(".results-table tbody tr");
        tableRows.forEach((row, index) => {
          row.addEventListener("mouseenter", function () {
            this.style.backgroundColor = "rgba(66, 133, 244, 0.04)";
          });

          row.addEventListener("mouseleave", function () {
            this.style.backgroundColor = "";
          });
        });
      });

      // Export functionality (placeholder)
      function exportResults() {
        // This would typically trigger a server-side export
        console.log("Exporting results...");

        // Show loading state
        const exportBtn = document.querySelector('[href="/export"]');
        const originalText = exportBtn.innerHTML;
        exportBtn.innerHTML = '<div class="loading"></div> Exportando...';

        // Simulate export delay
        setTimeout(() => {
          exportBtn.innerHTML = originalText;
        }, 2000);
      }

      // Attach export handler if needed
      document.addEventListener("DOMContentLoaded", function () {
        const exportBtn = document.querySelector('[href="/export"]');
        if (exportBtn) {
          exportBtn.addEventListener("click", function (e) {
            // If you want to handle export client-side, uncomment below:
            // e.preventDefault();
            // exportResults();
          });
        }
      });
    </script>
  </body>
</html>
